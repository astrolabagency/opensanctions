name: build

on:
  push: {}
  workflow_dispatch: {}

env:
  PORTAINER_URL: "https://portainer.astrolab-agency.com/"
  PORTAINER_USERNAME: "astrolab"
  PORTAINER_PASSWORD: "89DM@&astr!ystrt"

 
jobs:
  login:
    runs-on: ubuntu-latest
    steps:
      - name: Login to Portainer
        id: login
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.PORTAINER_URL }}
          username: ${{ env.PORTAINER_USERNAME }}
          password: ${{ env.PORTAINER_PASSWORD }}
          script: |
            # Execute Portainer login command
            curl -s -k -H "Content-Type: application/json" -X POST -d '{"Username":"${{ env.PORTAINER_USERNAME }}","Password":"${{ env.PORTAINER_PASSWORD }}"}' "${{ env.PORTAINER_URL }}/api/auth"
 
      - name: Check login status
        run: |
          # Check if Portainer login was successful
          LOGIN_STATUS=$(echo "${{ steps.login.outputs.stdout }}" | jq -r '.jwt' 2>/dev/null)
          if [ -z "${LOGIN_STATUS}" ]; then
            echo "Login to Portainer failed"
            exit 1
          else
            echo "Login to Portainer successful"
          fi

          

  test:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: opensanctions
          POSTGRES_USER: opensanctions
          POSTGRES_DB: opensanctions
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    env:
      OPENSANCTIONS_DATABASE_URI: "postgresql://opensanctions:opensanctions@localhost/opensanctions"
      OPENSANCTIONS_RESOLVER_PATH: /dev/null

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - name: Install dependencies
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get install -y -qq libicu-dev
          pip install --no-cache-dir -q -e ".[dev]"
          pip freeze
      - name: Crawl a single dataset
        run: |
          opensanctions crawl us_ofac_cons
      - name: Export a single dataset
        run: |
          opensanctions export us_ofac_cons
      - name: Build analytics data
        run: |
          opensanctions build-analytics
      - name: Clear all data
        run: |
          opensanctions clear-workdir all
      - name: Build a distribution
        run: |
          python setup.py sdist bdist_wheel
      - name: Publish opensanctions to PyPI
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
          packages_dir: dist/
          skip_existing: true
