name: build-and-push-to-my-portainer
on:
  push:
    branches:
      - main
env:
  PORTAINER_URL: "portainer.astrolab-agency.com"
  PORTAINER_REGISTRY_USERNAME: ${{ secrets.USERNAME }}
  PORTAINER_REGISTRY_PASSWORD: ${{ secrets.PORTAINER_REGISTRY_PASSWORD }}
  REGISTRY_HTTP_RELATIVEURLS: "true"
  OPENSANCTIONS_DATABASE_URI: "postgresql://opensanctions:opensanctions@localhost/opensanctions"
  OPENSANCTIONS_RESOLVER_PATH: /dev/null
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Login to Github Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GHCR_TOKEN}}
      - name: Build docker image 
        run: |
          docker-compose build 
      - name: push docker image 
        run: |
          docker push ghcr.io/astrolabagency/opensanctions:latest 
      - name: down  docker image 
        run: |
          docker-compose down 
 #     - name: login &pull images into portainer 
  #      run: |
   #      echo "${{ env.PORTAINER_REGISTRY_PASSWORD }}" | docker login --username "${{ env.PORTAINER_REGISTRY_USERNAME }}" --password-stdin portainer.astrolab-agency.com  
    #     docker  pull <ghcr.io/astrolabagency/opensanctions:latest>
  #       docker push  portainer.astrolab-agency.com/opensanctions:latest

      - name: Run playbook
      uses: dawidd6/action-ansible-playbook@v2
      with:
    # Required, playbook filepath
      playbook: deployment_dev.yml
    # Optional, directory where playbooks live
      directory: ./deployment
    # Optional, SSH private key
      key: ${{secrets.SSH_PRIVATE_KEY}}
    # Optional, literal inventory file contents
      inventory: |
        [dev]
        188.165.210.189 ansible_ssh_user=root ansible_python_interpreter=/usr/bin/python2.7

        [dev:vars]
        c_name={{ lookup('env','CI_PROJECT_NAME') }}-dev
        h_name={{ lookup('env','CI_PROJECT_NAME') }}-dev
        net_id=173.20.0
        host_id=3      
        container_port=3000
        branch_name=dev
        runner_name=opensource
        network_name=dgauction-dev
        registry_url={{ lookup('env','GHCR_REGISTRY') }}                          
        registry_user={{ lookup('env','GITHUB_REGISTRY_USER') }}     
        registry_password={{ lookup('env','GITHUB_REGISTRY_PASS') }}  
        image_name={{ lookup('env','CI_REGISTRY_IMAGE') }}:{{ lookup('env','CI_COMMIT_SHORT_SHA') }}-dev

        [dgauction-dev_network:children]
        dev

        [dgauction-dev_clean:children]
        dev


  test:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: opensanctions
          POSTGRES_USER: opensanctions
          POSTGRES_DB: opensanctions
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
 
    
 
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - name: Install dependencies
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get install -y -qq libicu-dev
          pip install --no-cache-dir -q -e ".[dev]"
          pip freeze
      - name: Crawl a single dataset
        run: |
          opensanctions crawl us_ofac_cons
      - name: Export a single dataset
        run: |
          opensanctions export us_ofac_cons
      - name: Build analytics data
        run: |
          opensanctions build-analytics
      - name: Clear all data
        run: |
          opensanctions clear-workdir all
      - name: Build a distribution
        run: |
          python setup.py sdist bdist_wheel
      - name: Publish opensanctions to PyPI
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
          packages_dir: dist/
          skip_existing: true
 